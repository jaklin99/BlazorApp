@page "/"
@using BlazorApp.Data
@inject IpcService IpcService

@if (IPCs == null)
{
    <p>Loading...</p>
}
else
{
<table class="table table-striped">
    <thead>
    <tr>
            <th>IPC</th>
           @* <th>Data Factory</th>
            <th>Time</th>
            <th>AvgValue</th>
            <th>MinValue</th>
            <th>MaxValue</th>
            <th>MetricId</th>
            <th>CpuMHz</th>*@
            <th>Lowest performance</th>
    </tr>
        </thead>
        <tbody>
@*            sorting the data accoring to the lowest performance of IPCs
*@            
           @foreach (var ipc in IPCs.OrderBy(pc => pc.LowestPerformance))
            {
                @*calculating the lowest performance by taking into account the values provided in the excel file*@
                @ipc.LowestPerformance;
                lowestPerformance = Math.Min(@ipc.AvgValue, Math.Min(@ipc.MinValue, Math.Min(@ipc.MaxValue, @ipc.CpuMHz)));

                <tr>
                    <td>@ipc.Ipc</td>
                    @*
                    <td>@ipc.DataFactory</td>
                    <td>@ipc.Date</td>
                    <td>@ipc.AvgValue</td>
                    <td>@ipc.MinValue</td>
                    <td>@ipc.MaxValue</td>
                    <td>@ipc.MetricId</td>
                    <td>@ipc.CpuMHz</td>*@

@*                    TODO: set the lowest performance and display it
*@   
                    <td>@ipc.LowestPerformance</td>
                </tr>
            }
        </tbody>
</table>
}

@code{
    public List<IPC> IPCs = new List<IPC>();

    private List<IPC> ReadExcel()
    {
        IPCs = IpcService.GetIPCs();
        return IPCs;
    }

    protected override void OnInitialized()
    {
        ReadExcel();
        Console.WriteLine(ReadExcel());
    }

    private int? lowestPerformance;


    [Inject]
    private IpcService ipcService { get; set; }

    private void SetVariable() => ipcService.SetLowestPerformance(lowestPerformance);

}